Session 9 HTTP and FTP
==============================


Apache Web Server
----------------------------------------------------

Service name: httpd

Package name: httpd-{ver}.{arch}.rpm

Main config: /etc/httpd/conf/httpd.conf

Module config: /etc/httpd/conf.d

Default DocRoot: /var/www/html

Installation and Basic Configuration
--------------------------------------

#. Install the ``web-server`` package group:

    ::
	
        # yum groupinstall web-server

    .. 
	
    Note that this install several packages including the Apache Manual which is then locally accessible at http://localhost/manual

#. Install the ``mod_ssl`` package::

        # yum install mod_ssl

#. Start and configure persistence::

        # service httpd start; chkconfig httpd on

.. 

    In this default configuration, you can create an ``index.html`` page in ``/var/www/html/`` and it will be served out as your home page. Additionally, you can use https:// to connect securely to your webserver, but you will have to manually accept a self-signed certificate.

Installing a Signed SSL Certificate
---------------------------------------

#. Place the certificate and private key in the appropriate locations in ``/etc/pki/tls/``.

#. Ensure that both files have the ``cert_t`` SELinux file context and that the private key is readable only by root.

#. Modify ``/etc/httpd/conf.d/ssl.conf``:

	* ``SSLCertificateFile`` points to your newly installed certificate.
	* ``SSLCertificateKeyFile`` points to the corresponding private key.

#. Restart the service.

    Now your website will present a certificate signed by an accepted CA.

Virtual Host Configuration
----------------------------------------------------

"Virtual Hosts" come in two forms:

    Standard Virtual Hosts
        Exist on hosts that have been assigned multiple IP addresses. Queries for each separate IP address are served pages from a particular virtual host.

    Name Virtual Hosts
        Exist on hosts with multiple names aliased to one IP address (usually through DNS aliases, but can also be accomplished with ``/etc/hosts``). Queries for each separate name (regardless of IP address) are served as different virtual hosts.

Name Virtual Host Configuration
--------------------------------------

Near the end of httpd.conf, uncomment the line::

    #NameVirtualHost *:80

Create a section for each vhost::

    #<VirtualHost *:80>
    #    ServerAdmin webmaster@dummy-host.example.com
    #    DocumentRoot /www/docs/dummy-host.example.com
    #    ServerName dummy-host.example.com
    #    ErrorLog logs/dummy-host.example.com-error_log
    #    CustomLog logs/dummy-host.example.com-access_log common
    #</VirtualHost>

* Uncomment the first and last lines in that block.  Uncomment and modify the lines for ServerName, DocumentRoot, and others that you want to customize.

* Include a Vhost stanza for your default server instance and for each alternate name.

Example Virtual Host Configuration
----------------------------------------


.. image:: images/VirtHostConf.png
   :width: 90%


Configuring for CGI-BIN scripts
--------------------------------------

Refer to the Apache Manual (package: httpd-manual) for full details and a tutorial on *CGI: Dynamic Content*.

The ``ScriptAlias`` line in ``httpd.conf`` designates the directory in which Apache expects to find CGI scripts.

CGI scripts can be implemented in directories **outside** of the ``DocumentRoot`` path -- but this will require modification of the ``ScriptAlias`` line and the fcontext rules for SELinux.

   

Apache Access Control
----------------------------------------------------

Per-directory options (example)::

    <Directory /var/www/>
        Order Deny,Allow
        Deny from all
        Allow from dev.example.com
    </Directory>        

* Three-pass access control:

    #. Parse all statements of type specified first.
    #. Parse all statements of type specified second. Matches overrides matches of previous type.
    #. Process requests which matched nothing.

* In ``Order`` statements, whichever directive comes **last** is the default in case of no match.



Host Based Security directive formats
--------------------------------------------

``Deny from example.com``

``Allow from 192.168.0.15``

``Deny from 192.168.0.0/255.255.255.0``

``Deny from 192.168.1.0/24``



Access Control with .htaccess files
------------------------------------------

If permitted by httpd.conf, access may be controlled on a per-directory basis with ``.htaccess`` files in the directories where the content needs to be protected::


  <Files ~ "^\.ht">
      Order allow,deny
      Allow from 192.168.5.200
      Deny from all
  </Files>




User Based Security with htpasswd flat file
---------------------------------------------------

::

  <Directory "/var/www/html/site">
    AuthType Basic
    AuthName "Password Protected"
    AuthUserFile /etc/httpd/.htpasswd
    Require valid-user
  </Directory>



Configuring Passwords
-------------------------------

* ``htpasswd -cm /etc/httpd/.htpasswd good_user``

* ``htpasswd -m /etc/httpd/.htpasswd another_user``


User Based Security with LDAP authentication
---------------------------------------------------

#. Obtain the LDAP certificate.

#. Add a line to your http.conf (usually in your Vhost definition)::

    LDAPTrustedGlobalCert CA_BASE64 /path/to/cert

#. Configure a Directory Block::

    <Directory /var/www/html/private>
        AuthName "Private with LDAP access"
        AuthType  basic
        AuthBasicProvider ldap
        AuthLDAPUrl "ldap://fqdn/prefix" TLS
        Require valid-user
    </Directory>

..

    Modify the cert path, and the FQDN and prefix of the LDAP Server to match your infrastructure.
    


SELinux Implications for HTTP
----------------------------------------

Find SELinux Filesystem contexts that might affect HTTP::

    # semanage fcontext -l | grep "http"

Find SELinux port contexts that might affect HTTP::

    # semanage port -l | grep "http"
    
Find SELinux booleans that might affect HTTP::

    # semanage boolean -l | grep http

Read the man page ``httpd_selinux (8)``

Make SELinux more verbose::

    # semanage dontaudit off

..

    This disables setroubleshoot-server, sealert, and the issuing of SELinux messages into ``/var/log/messages`` -- so you'll need to view the messages in ``/var/log/audit/audit.log``.

..         # sealert -a /var/log/audit/audit.log -H > audit.html

Important SELinux Contexts
---------------------------------

httpd_sys_content_t
    For general files and directories to be served by httpd.

httpd_sys_script_exec_t
    For scripts (CGI) to be executed by the web server.

public_content_t
    For files that are to be shared with other SELinux protected services

Firewall and SELinux for httpd
----------------------------------------------------



.. o HTTP(s)
.. + * Install the packages needed to provide the service
.. + * Configure SELinux to support the service
.. + * Configure the service to start when the system is booted
.. + * Configure the service for basic operation
.. + * Configure host-based and user-based security for the service
.. + * Configure a virtual host
.. + * Configure private directories
.. + * Deploy a basic CGI application
.. + * Configure group-managed content


Very Secure File Transfer Protocol Daemon
-------------------------------------------------

``vsftpd`` is Red Hat's preferred FTP daemon.  The "Very Secure" descriptor refers to the daemon and not to the protocol!

The only mention of FTP in the RHCSA objectives is concerned with enabling a default configuration

The only mention of FTP in the RHCE objectives is concerned with securely configuring anonymous access.


Installation and Basic Configuration
------------------------------------------

Package: vsftpd

Install::

    # yum -y install vsftpd

Start and Configure Persistence::

    # service vsftpd start; chkconfig vsftpd on

In this default configuration, anonymous downloads are allowed from ``/pub`` (as shown to the client) and are placed in ``/var/ftp/pub/`` (as viewed on the server). Additionally, system users are able to login by username and password and access their home directories with read/write permissions. No anonymous uploads are permitted by default.

FTP Documentation
-------------------------

Man Pages:

    * vsftpd.conf (5)
    * ftpd_selinux (8)
    
Investigate SELinux implications for FTP
-------------------------------------------


Find SELinux Filesystem contexts that might affect FTP::

    # semanage fcontext -l | grep "ftp"

Find SELinux port contexts that might affect FTP::

    # semanage port -l | grep "ftp"
    
Find SELinux booleans that might affect FTP::

    # semanage boolean -l | grep ftp



Investigate Firewall Implications for FTP
----------------------------------------------

Find ports that may need to be opened for FTP::

    # grep ftp /etc/services 

    
Configuring a Secure "Drop-box" for Anon Upload
-------------------------------------------------

#. Create an upload directory owned by ``root.ftp`` and with 730 permissions::

    cd /var/ftp
    mkdir incoming 
    chgrp ftp incoming
    chmod 730 incoming


#. Modify SELinux

	* Set context of ``public_content_rw_t`` on the upload directory::

		semanage fcontext -a -t public_content_rw_t '/var/ftp/incoming(/.*)?'
		restorecon -rvv /var/ftp/


	* Enable the ``allow_ftp_anon_write`` boolean::

		setsebool -P allow_ftpd_anon_write on


#. Modify ``/etc/vsftpd/vsftpd.conf`` as follows::

    anonymous_enable=YES
    local_enable=NO
    write_enable=YES
    anon_upload_enable=YES
    chown_uploads=YES
    chown_username=daemon
    anon_umask = 077

#. Modify iptables for inbound ftp

	* in ``/etc/sysconfig/iptables-config``::

		    IPTABLES_MODULES="nf_conntrack_ftp nf_nat_ftp"

	* Set rules::

		# iptables -A INPUT -p tcp --dport 21 -j ALLOW
		# iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ALLOW


.. o FTP
.. + * Install the packages needed to provide the service
.. + * Configure SELinux to support the service
.. + * Configure the service to start when the system is booted
.. + * Configure the service for basic operation
.. + * Configure host-based and user-based security for the service
.. + * Configure anonymous-only download


